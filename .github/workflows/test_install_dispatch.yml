name: Dispatch Makefile Test Install

on:
  schedule:
    - cron: "0 1 * * 0" # Weekly on Sunday at 1:00 a.m.

  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        description: 'Which version to release? If empty, will use version checked out in repo.'
        type: string
        required: false
      TEST_OR_PROD:
        description: 'Which published version to test? PyPi (prod) or TestPyPi (test)?'
        type: string
        default: 'test'

defaults:
  run:
    shell: bash -el {0}

env:
  CONDA_VERSION: latest

jobs:
  validate-and-set-inputs:
    name: Set Inputs
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.sanitize-release-version.outputs.RELEASE_VERSION }}
      TEST_OR_PROD: ${{ steps.set-test.outputs.TEST_OR_PROD }}

    steps:
      - name: Sanitize RELEASE_VERSION
        id: sanitize-release-version
        env:
          RELEASE_VERSION: ${{ inputs.RELEASE_VERSION }}
        run: |
          echo "Using RELEASE_VERSION: $RELEASE_VERSION"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Set Test or Prod
        id: set-test
        env:
          TEST_OR_PROD: ${{ inputs.TEST_OR_PROD }}
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo "TEST_OR_PROD=prod" >> $GITHUB_OUTPUT
          else
            echo "TEST_OR_PROD=$TEST_OR_PROD" >> $GITHUB_OUTPUT
          fi

  test-published-package:
    name: Test Published Package on (Test)PyPi
    needs: validate-and-set-inputs
    uses: crickets-and-comb/shared/.github/workflows/test_install.yml@main
    with:
      RELEASE_VERSION: ${{ needs.validate-and-set-inputs.outputs.RELEASE_VERSION }}
      TEST_OR_PROD: ${{ needs.validate-and-set-inputs.outputs.TEST_OR_PROD }}
    secrets:
      CHECKOUT_SHARED: ${{ secrets.CHECKOUT_SHARED }}